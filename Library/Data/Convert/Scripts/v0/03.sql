CREATE TABLE hbUsers (
  ID BIGINT IDENTITY(1,1) PRIMARY KEY,
  USERNAME VARCHAR(128) NOT NULL,
  SURNAME VARCHAR(128) NOT NULL,
  DEPARTMENT VARCHAR(64),
  EMAIL VARCHAR(256) UNIQUE,
  PHONENUMBER VARCHAR(20),
  PASSWORDHASH VARCHAR(256) NOT NULL,
  SEX CHAR(1) CHECK (SEX IN ('M', 'F')), 
  ADDRESS VARCHAR(256),
  COUNTRY_ID INT,
  FOREIGN KEY (COUNTRY_ID) REFERENCES HBCOUNTRY(ID) ON DELETE SET NULL
);

CREATE TABLE HBCOUNTRY (
  ID INT IDENTITY(1,1) PRIMARY KEY,
  COUNTRY_NAME VARCHAR(256) NOT NULL
);

CREATE TABLE LOGINVENTORY (
  ID INT IDENTITY(1,1) PRIMARY KEY,
  USER_ID BIGINT,
  DATE_START SMALLDATETIME,
  DATE_END SMALLDATETIME,
  STATUS_ID INT,
  FOREIGN KEY (USER_ID) REFERENCES hbUsers(ID) ON DELETE CASCADE,
  FOREIGN KEY (STATUS_ID) REFERENCES HBBOOKSTATUS(ID) ON DELETE SET NULL
);

CREATE TABLE HBBOOKSTATUS (
  ID INT IDENTITY(1,1) PRIMARY KEY ,
  STATUS_NAME VARCHAR(256) NOT NULL
);

CREATE TABLE INVENTORY (
  ID INT IDENTITY(1,1) PRIMARY KEY,
  BOOK_ID INT NOT NULL,
  LIBRARY_NAME VARCHAR(128),
  ROOM_LIBRARY VARCHAR(256),
  FOREIGN KEY (BOOK_ID) REFERENCES BOOK(ID) ON DELETE CASCADE
);

CREATE TABLE BOOK (
  ID INT IDENTITY(1,1)  PRIMARY KEY,
  NAME VARCHAR(256) NOT NULL,
  PHOTO VARBINARY(MAX) NOT NULL,--Check?!
  RELEASE_DATE DATE,
  SUMMARY TEXT,
  LANGUAGE VARCHAR(128),
  IDEXTERNAL INT(256)
);

CREATE TABLE AUTHORSBOOKS (
  AUTHOR_ID INT NOT NULL,
  BOOK_ID INT NOT NULL,
  PRIMARY KEY (AUTHOR_ID, BOOK_ID),
  FOREIGN KEY (AUTHOR_ID) REFERENCES HBAUTHOR(ID) ON DELETE CASCADE,
  FOREIGN KEY (BOOK_ID) REFERENCES BOOK(ID) ON DELETE CASCADE
);

CREATE TABLE HBAUTHOR (
  ID INT IDENTITY(1,1) PRIMARY KEY,
  NAME VARCHAR(256) NOT NULL
);

CREATE TABLE BOOKGENRES (
  BOOK_ID INT NOT NULL,
  GENRE_ID INT NOT NULL,
  PRIMARY KEY (BOOK_ID, GENRE_ID),
  FOREIGN KEY (BOOK_ID) REFERENCES BOOK(ID) ON DELETE CASCADE,
  FOREIGN KEY (GENRE_ID) REFERENCES HBGENRE(ID) ON DELETE CASCADE
);

CREATE TABLE HBGENRE (
  ID INT IDENTITY(1,1)  PRIMARY KEY,
  GENRE_NAME VARCHAR(256) NOT NULL
);